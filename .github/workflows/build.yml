name: Build Electron App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest  # Using Windows runner

    steps:
      - name: Checkout main code
        uses: actions/checkout@v2

      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          repository: th3cyb3rhub/TheCyberHUB
          ref: gh-pages
          path: ./  # Check out into a subdirectory

      - name: Copy content from gh-pages to current directory
        run: |
          if (Test-Path "gh-pages") {
              Copy-Item -Recurse -Force "./*" "."
          } else {
              Write-Host "gh-pages directory does not exist."
          }

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Clear Electron Builder Cache
        run: |
          if (Test-Path "$HOME\.cache\electron-builder") {
              Remove-Item -Recurse -Force "$HOME\.cache\electron-builder"
          } else {
              Write-Host "Cache directory does not exist, skipping removal."
          }

      - name: Install dependencies
        run: npm install

      - name: Package the app for Windows
        run: |
          # Build for Windows without publishing
          npx electron-builder --win nsis -p never
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Release Assets
        uses: ncipollo/release-action@v1
        with:
          tag: 'v${{ github.run_number }}'
          name: 'TheCyberHUB Desktop Release v${{ github.run_number }}'
          artifacts: |
            dist/*.exe
          token: ${{ secrets.PAT_TOKEN }}  # Use your PAT here
          skipIfReleaseExists: true  # Skip if the release already exists

      # Optional: Clean up after the build
      - name: Cleanup
        run: |
          echo "Cleaning up build artifacts"
          Remove-Item -Recurse -Force dist
